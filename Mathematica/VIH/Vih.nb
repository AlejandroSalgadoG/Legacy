ClearAll["Global`*"]

ini = 0;
fin = 500;

d = 0.02;
k = 100;
s = 10;
\[Beta] = 0.000024;
\[Mu] = 0.24;
c = 2.4;

X1fun[U1_] = (X1'[t] == s - d X1[t] - (1 - U1) \[Beta] X1[t] X3[t]);
X2fun[U1_] = (X2'[t] == (1 - U1) \[Beta] X1[t] X3[t] - \[Mu] X2[t]);
X3fun[U2_] = (X3'[t] == (1 - U2) k X2[t] - c X3[t]);

Manipulate[
    system = ParametricNDSolve[{X1fun[u1], X2fun[u1], X3fun[u2],
                                X1[0] == X1ini, X2[0] == X2ini, X3[0] == X3ini,
                                WhenEvent[t == tmod, {u1 -> u1mod, u2 -> u2mod}]},
                                {X1, X2, X3}, {t, ini, fin}, {u1, u2, u1mod, u2mod}];
 
    functions = {X1[U1, U2, U1Mod, U2Mod][t],  X2[U1, U2, U1Mod, U2Mod][t], X3[U1, U2, U1Mod, U2Mod][t]} /. system;
 
    x1fun = Part[functions, 1];
    x2fun = Part[functions, 2];
    x3fun = Part[functions, 3];
    
    x1plot = Plot[x1fun, {t, ini, fin}, 
                  PlotLabel -> "X1",
                  PlotLabels -> {"X1"},
                  PlotRange -> {0, 500},
                  Frame -> {True, True, False, False}, 
                  FrameLabel -> {"Tiempo", "Valores"},
                  ImageSize -> 400];
    
    x2plot = Plot[x2fun, {t, ini, fin}, 
                  PlotLabel -> "X2",
                  PlotLabels -> {"X2"},
                  PlotRange -> {0, 100},
                  Frame -> {True, True, False, False}, 
                  FrameLabel -> {"Tiempo", "Valores"},
                  ImageSize -> 400];
    
    x3plot = Plot[x3fun, {t, ini, fin}, 
                  PlotLabel -> "X3",
                  PlotLabels -> {"X3"},
                  PlotRange -> {0, 4000},
                  Frame -> {True, True, False, False}, 
                  FrameLabel -> {"Tiempo", "Valores"},
                  ImageSize -> 400];
    
    parametricPlot = ParametricPlot3D[{x1fun, x2fun, x3fun}, {t, ini, fin}, 
                                       AspectRatio -> 0.7, 
                                       PlotRange -> {{0, 1000}, {0, 1500}, {0, 3000}}, 
                                       AxesLabel -> {"X1", "X2", "X3"}, ImageSize -> 400];
    
    GraphicsGrid[{{x1plot, x2plot}, {x3plot, parametricPlot}}],
    
    Style["Valores iniciales", Bold], Delimiter,
    {{X1ini, 450, "X1"}, 400, 500, Appearance -> "Labeled"},
    {{X2ini, 0, "X2"}, 0, 10, Appearance -> "Labeled"},
    {{X3ini, 1, "X3"}, 0, 10, Appearance -> "Labeled"},
    
    Style["Entradas", Bold], Delimiter,
    {{U1, 0, "U1"}, 0, 1, Appearance -> "Labeled"},
    {{U2, 0, "U2"}, 0, 1, Appearance -> "Labeled"},
    
    Style["Tiempo de modificacion", Bold], Delimiter,
    {{tmod, 500, "T"}, ini, fin, Appearance -> "Labeled"},
    
    Style["Entradas modificadas", Bold], Delimiter,
    {{U1Mod, 0, "U1"}, 0, 1, Appearance -> "Labeled"},
    {{U2Mod, 0, "U2"}, 0, 1, Appearance -> "Labeled"},
    
    ControlPlacement -> Left
]

Plot[x2fun/x3fun, {t, ini, fin},
     PlotLabel -> "Relacion entre X2 y X3",
     PlotLabels -> {"X2/X3"},
     PlotRange -> {0, 0.05},
     Frame -> {True, True, False, False},
     FrameLabel -> {"Tiempo", "x2/x3"},
     ImageSize -> 500
]

x1ini = 450;
x2ini = 0;
x3ini = 1;

X1Rand[] := x1ini + x1ini*RandomReal[{-1, 1}];
X2Rand[] := x2ini + x2ini*RandomReal[{-1, 1}];
X3Rand[] := x3ini + x3ini*RandomReal[{-1, 1}];

n = 5;
iniU1 = 0;
iniU2 = 0;

functions = {};
For[i = 0, i < n, i++,
    sim = NDSolve[{X1fun[iniU1], X2fun[iniU1], X3fun[iniU2], 
                   X1[0] == X1Rand[], X2[0] == X2Rand[], X3[0] == X3Rand[]}, 
                  {X1, X2, X3}, {t, ini, fin}];

    functions = Append[functions, First[{X1[t], X2[t], X3[t]} /. sim]]
];

ParametricPlot3D[functions, {t, ini, fin},
                 AspectRatio -> 0.7, 
                 PlotRange -> {{0, 500}, {0, 500}, {0, 3000}}, 
                 AxesLabel -> {"X1", "X2", "X3"},
                 ImageSize -> 600]

